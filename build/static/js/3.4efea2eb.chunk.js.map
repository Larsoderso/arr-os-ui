{"version":3,"sources":["../node_modules/@atlaskit/theme/dist/esm/elevation.js","../node_modules/react-popper/lib/esm/Reference.js","../node_modules/@atlaskit/inline-dialog/dist/esm/InlineDialog/styled.js","../node_modules/@atlaskit/inline-dialog/dist/esm/InlineDialog/index.js","../node_modules/@atlaskit/inline-dialog/dist/esm/index.js"],"names":["__webpack_require__","d","__webpack_exports__","e200","_colors__WEBPACK_IMPORTED_MODULE_0__","_utils_themed__WEBPACK_IMPORTED_MODULE_1__","Object","light","dark","Reference_InnerReference","_React$Component","InnerReference","_this","_len","arguments","length","args","Array","_key","call","apply","this","concat","defineProperty_default","assertThisInitialized_default","node","utils","props","innerRef","setReferenceNode","inheritsLoose_default","_proto","prototype","componentWillUnmount","render","warning_default","Boolean","children","ref","refHandler","react","Reference","Manager","Consumer","extends_default","templateObject_1","backgroundColor","themed","colors","textColor","Container","styled_components_browser_esm","div","tslib_es6","constants","math","dialog","elevation","InlineDialog_InlineDialog","_super","InlineDialog","handleClickOutside","event","_a","isOpen","onClose","defaultPrevented","container","containerRef","trigger","triggerRef","target","contains","componentDidUpdate","prevProps","window","addEventListener","removeEventListener","componentDidMount","placement","content","onContentBlur","onContentFocus","onContentClick","testId","popper","react_default","a","createElement","Popper","style","onBlur","onFocus","onClick","current","data-testid","lib_default","defaultProps","createAndFireEventOnAtlaskit","createAndFireEvent","esm_InlineDialog","withAnalyticsContext","componentName","packageName","version","packageVersion","withAnalyticsEvents","action","actionSubject","attributes"],"mappings":"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","file":"static/js/3.4efea2eb.chunk.js","sourcesContent":["import * as colors from './colors';\nimport themed from './utils/themed'; // Cards on a board\n\nexport var e100 = themed({\n  light: \"box-shadow: 0 1px 1px \" + colors.N50A + \", 0 0 1px 0 \" + colors.N60A + \";\",\n  dark: \"box-shadow: 0 1px 1px \" + colors.DN50A + \", 0 0 1px \" + colors.DN60A + \";\"\n}); // Inline dialogs\n\nexport var e200 = themed({\n  light: \"box-shadow: 0 4px 8px -2px \" + colors.N50A + \", 0 0 1px \" + colors.N60A + \";\",\n  dark: \"box-shadow: 0 4px 8px -2px \" + colors.DN50A + \", 0 0 1px \" + colors.DN60A + \";\"\n}); // Modals\n\nexport var e300 = themed({\n  light: \"box-shadow: 0 8px 16px -4px \" + colors.N50A + \", 0 0 1px \" + colors.N60A + \";\",\n  dark: \"box-shadow: 0 8px 16px -4px \" + colors.DN50A + \", 0 0 1px \" + colors.DN60A + \";\"\n}); // Panels\n\nexport var e400 = themed({\n  light: \"box-shadow: 0 12px 24px -6px \" + colors.N50A + \", 0 0 1px \" + colors.N60A + \";\",\n  dark: \"box-shadow: 0 12px 24px -6px \" + colors.DN50A + \", 0 0 1px \" + colors.DN60A + \";\"\n}); // Flag messages (notifications)\n\nexport var e500 = themed({\n  light: \"box-shadow: 0 20px 32px -8px \" + colors.N50A + \", 0 0 1px \" + colors.N60A + \";\",\n  dark: \"box-shadow: 0 20px 32px -8px \" + colors.DN50A + \", 0 0 1px \" + colors.DN60A + \";\"\n});","import _extends from \"@babel/runtime/helpers/extends\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/inheritsLoose\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport * as React from 'react';\nimport warning from 'warning';\nimport { ManagerReferenceNodeSetterContext } from './Manager';\nimport { safeInvoke, unwrapArray, setRef } from './utils';\n\nvar InnerReference =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(InnerReference, _React$Component);\n\n  function InnerReference() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n\n    _defineProperty(_assertThisInitialized(_this), \"refHandler\", function (node) {\n      setRef(_this.props.innerRef, node);\n      safeInvoke(_this.props.setReferenceNode, node);\n    });\n\n    return _this;\n  }\n\n  var _proto = InnerReference.prototype;\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    setRef(this.props.innerRef, null);\n  };\n\n  _proto.render = function render() {\n    warning(Boolean(this.props.setReferenceNode), '`Reference` should not be used outside of a `Manager` component.');\n    return unwrapArray(this.props.children)({\n      ref: this.refHandler\n    });\n  };\n\n  return InnerReference;\n}(React.Component);\n\nexport default function Reference(props) {\n  return React.createElement(ManagerReferenceNodeSetterContext.Consumer, null, function (setReferenceNode) {\n    return React.createElement(InnerReference, _extends({\n      setReferenceNode: setReferenceNode\n    }, props));\n  });\n}","import { __makeTemplateObject } from \"tslib\";\nimport styled from 'styled-components';\nimport { themed } from '@atlaskit/theme/components';\nimport { borderRadius, gridSize, layers } from '@atlaskit/theme/constants';\nimport { N0, DN50, N900, DN600 } from '@atlaskit/theme/colors';\nimport { multiply } from '@atlaskit/theme/math';\nimport { e200 } from '@atlaskit/theme/elevation';\nvar backgroundColor = themed({\n  light: N0,\n  dark: DN50\n});\nvar textColor = themed({\n  light: N900,\n  dark: DN600\n}); // eslint-disable-next-line import/prefer-default-export\n\nexport var Container = styled.div(templateObject_1 || (templateObject_1 = __makeTemplateObject([\"\\n  background: \", \";\\n  border-radius: \", \"px;\\n  box-sizing: content-box; /* do not set this to border-box or it will break the overflow handling */\\n  color: \", \";\\n  max-height: \", \"px;\\n  max-width: \", \"px;\\n  padding: \", \"px \", \"px;\\n  z-index: \", \";\\n\\n  \", \";\\n\\n  &:focus {\\n    outline: none;\\n  }\\n\"], [\"\\n  background: \", \";\\n  border-radius: \", \"px;\\n  box-sizing: content-box; /* do not set this to border-box or it will break the overflow handling */\\n  color: \", \";\\n  max-height: \", \"px;\\n  max-width: \", \"px;\\n  padding: \", \"px \", \"px;\\n  z-index: \", \";\\n\\n  \", \";\\n\\n  &:focus {\\n    outline: none;\\n  }\\n\"])), backgroundColor, borderRadius, textColor, multiply(gridSize, 56), multiply(gridSize, 56), multiply(gridSize, 2), multiply(gridSize, 3), layers.dialog, e200);\nvar templateObject_1;","import { __extends } from \"tslib\";\nimport React, { Component } from 'react';\nimport { withAnalyticsEvents, withAnalyticsContext, createAndFireEvent } from '@atlaskit/analytics-next';\nimport NodeResolver from 'react-node-resolver';\nimport { Manager, Reference, Popper } from '@atlaskit/popper';\nimport { name as packageName, version as packageVersion } from '../version.json';\nimport { Container } from './styled';\n\nvar InlineDialog =\n/** @class */\nfunction (_super) {\n  __extends(InlineDialog, _super);\n\n  function InlineDialog() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.handleClickOutside = function (event) {\n      var _a = _this.props,\n          isOpen = _a.isOpen,\n          onClose = _a.onClose;\n      if (event.defaultPrevented) return;\n      var container = _this.containerRef;\n      var trigger = _this.triggerRef;\n      var target = event.target; // exit if we click outside but on the trigger — it can handle the clicks itself\n\n      if (trigger && trigger.contains(target)) return; // call onClose if the click originated from outside the dialog\n\n      if (isOpen && container && !container.contains(target)) {\n        onClose && onClose({\n          isOpen: false,\n          event: event\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  InlineDialog.prototype.componentDidUpdate = function (prevProps) {\n    if (typeof window === 'undefined') return;\n\n    if (!prevProps.isOpen && this.props.isOpen) {\n      window.addEventListener('click', this.handleClickOutside, true);\n    } else if (prevProps.isOpen && !this.props.isOpen) {\n      window.removeEventListener('click', this.handleClickOutside, true);\n    }\n  };\n\n  InlineDialog.prototype.componentDidMount = function () {\n    if (typeof window === 'undefined') return;\n\n    if (this.props.isOpen) {\n      window.addEventListener('click', this.handleClickOutside, true);\n    }\n  };\n\n  InlineDialog.prototype.componentWillUnmount = function () {\n    if (typeof window === 'undefined') return;\n    window.removeEventListener('click', this.handleClickOutside, true);\n  };\n\n  InlineDialog.prototype.render = function () {\n    var _this = this;\n\n    var _a = this.props,\n        children = _a.children,\n        placement = _a.placement,\n        isOpen = _a.isOpen,\n        content = _a.content,\n        onContentBlur = _a.onContentBlur,\n        onContentFocus = _a.onContentFocus,\n        onContentClick = _a.onContentClick,\n        testId = _a.testId;\n    var popper = isOpen ? React.createElement(Popper, {\n      placement: placement\n    }, function (_a) {\n      var ref = _a.ref,\n          style = _a.style;\n      return React.createElement(Container, {\n        onBlur: onContentBlur,\n        onFocus: onContentFocus,\n        onClick: onContentClick,\n        innerRef: function innerRef(node) {\n          _this.containerRef = node;\n\n          if (typeof ref === 'function') {\n            ref(node);\n          } else {\n            ref.current = node;\n          }\n        },\n        style: style,\n        \"data-testid\": testId\n      }, content);\n    }) : null;\n    return React.createElement(Manager, null, React.createElement(Reference, null, function (_a) {\n      var ref = _a.ref;\n      return React.createElement(NodeResolver, {\n        innerRef: function innerRef(node) {\n          _this.triggerRef = node;\n\n          if (typeof ref === 'function') {\n            ref(node);\n          } else {\n            ref.current = node;\n          }\n        }\n      }, children);\n    }), popper);\n  };\n\n  InlineDialog.defaultProps = {\n    isOpen: false,\n    onContentBlur: function onContentBlur() {},\n    onContentClick: function onContentClick() {},\n    onContentFocus: function onContentFocus() {},\n    onClose: function onClose() {},\n    placement: 'bottom-start'\n  };\n  return InlineDialog;\n}(Component);\n\nexport { InlineDialog as InlineDialogWithoutAnalytics };\nvar createAndFireEventOnAtlaskit = createAndFireEvent('atlaskit');\nexport default withAnalyticsContext({\n  componentName: 'inlineDialog',\n  packageName: packageName,\n  packageVersion: packageVersion\n})(withAnalyticsEvents({\n  onClose: createAndFireEventOnAtlaskit({\n    action: 'closed',\n    actionSubject: 'inlineDialog',\n    attributes: {\n      componentName: 'inlineDialog',\n      packageName: packageName,\n      packageVersion: packageVersion\n    }\n  })\n})(InlineDialog));","export { default } from './InlineDialog';"],"sourceRoot":""}